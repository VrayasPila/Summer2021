#BlueJ class context
comment0.target=Challenge2_Soln
comment0.text=\r\n\ C3.1\:\ Write\ a\ program\ that\ prints\ out\ a\ square\ with\ side\ length\ 5\ and\ \#.\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ Something\ like\ this\ \#\#\#\#\#\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\#\#\#\#\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\#\#\#\#\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\#\#\#\#\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \#\#\#\#\#\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ using\ a\ for\ loop.\ Then\ rewrite\ your\ code\ using\ a\ while\ loop.\r\n\ \ \ \ \ \ \ \ \r\n\ \ \ \ \ \ \ \ \r\n\ C3.2\:\ Build\ upon\ yesterday's\ calculator\ but\ this\ time,\ instead\ of\ numbers\ for\ operators\ have\ symbols.\ Use\ switch\ statments.\r\n\ So\ the\ input\ should\ be\ like\ \r\n\ \r\n\ OUTPUT\:\ ASK\ FOR\ NUMBER\ \ \r\n\ INPUT\r\n\ OUTPUT\:\ ASK\ FOR\ SYMBOL\r\n\ INPUT\r\n\ OUTPUT\:\ ASK\ FOR\ NUMBER\r\n\ INPUT\r\n\ OUTPUT\:\ NUMBER\ SYMBOL\ NUMBER\ \=\ ANSWER\ \r\n\ INPUT\r\n\ OUTPUT\:\ Do\ you\ want\ to\ continue?\r\n\ \r\n\ 5\r\n\ +\r\n\ 10\r\n\ 5\ +\ 10\ \=\ 15\r\n\ Do\ you\ want\ to\ continue?\r\n\ \r\n\ Keep\ asking\ the\ user\ for\ input\ until\ they\ stop.\ Handle\ errors\ like\ entering\ something\ other\ than\ a\ symbol.\r\n\r\n\ \ \ \ \ \ \ \r\n\ (Optional)\ C3.3\:\ Do\ challenge\ 3.1\ but\ this\ time,\ you\ are\ only\ allowed\ these\ types\ of\ statements\ any\ number\ of\ times\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ System.out.print();\ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ System.out.println();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ -\ for(\ ;\ ;\ ){}\r\n\ \ \r\n\ \ (Optional)\ C3.4\ Print\ this\ using\ loops\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ **\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ***\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ ****\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ *****\r\n\ \ \r\n\ \ \ Rules\r\n\ \ \ \ \ \ \ 1.\ Have\ variable\ names\ that\ make\ sense\r\n\ \ \ \ \ \ \ 2.\ Follow\ one\ convention\ systematically.\ If\ your\ brackets\ start\ on\ the\ next\ line\ as\ mine\ do,\ Do\ not\ change\ that\r\n\ \ \ \ \ \ \ 3.\ Try\ to\ make\ the\ code\ as\ concise\ as\ possible.\ Not\ the\ least\ line\ numbers\ but\ logically,\ as\ simple\ as\ it\ can\ be\r\n\ \ \ \ \ \ \ 4.\ Make\ the\ program\ funny\ or\ sarcastic\ bc\ why\ not.\ \r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
numComments=2
